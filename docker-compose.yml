services:
  postgres:
    image: postgres:16.6
    container_name: life-metrics-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: life-metrics-api
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq_definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq-plugins:/plugins
    environment:
      - RABBITMQ_ENABLED_PLUGINS_FILE=/etc/rabbitmq/enabled_plugins
    command: >
      bash -c "
        # First install the plugin
        apt-get update && 
        apt-get install -y wget && 
        mkdir -p /plugins && 
        wget -P /plugins https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/v3.12.0/rabbitmq_delayed_message_exchange-3.12.0.ez && 
        # Enable only management plugin first
        echo '[rabbitmq_management].' > /etc/rabbitmq/enabled_plugins && 
        # Start RabbitMQ
        rabbitmq-server & 
        # Wait for RabbitMQ to start
        sleep 15 && 
        # Enable the delayed message plugin after server is running
        rabbitmq-plugins enable rabbitmq_delayed_message_exchange && 
        # Import definitions
        rabbitmqctl import_definitions /etc/rabbitmq/definitions.json && 
        # Keep container running
        wait"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "rabbitmqctl status && rabbitmqctl list_users | grep ${RABBITMQ_USER}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  postgres_data:
  rabbitmq_data:
